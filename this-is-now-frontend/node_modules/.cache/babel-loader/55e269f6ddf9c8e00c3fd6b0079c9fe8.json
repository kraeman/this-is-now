{"ast":null,"code":"import { GET_READY_TO_STORE_SCORES, STORE_SCORES, DELETE_VALUE_FROM_SCORES, GET_READY_TO_DELETE_VALUE_FROM_SCORES } from \"../actions/actionTypes\";\nexport const scores = (state = {\n  scores: [],\n  requesting: false\n}, action) => {\n  switch (action.type) {\n    case GET_READY_TO_STORE_SCORES:\n      return { ...state,\n        requesting: true\n      };\n\n    case STORE_SCORES:\n      return { ...state,\n        scores: [...state.scores, ...action.payload],\n        requesting: false\n      };\n\n    case GET_READY_TO_DELETE_VALUE_FROM_SCORES:\n      return { ...state,\n        requesting: true\n      };\n\n    case DELETE_VALUE_FROM_SCORES:\n      return {\n        scores: [...state.scores.filter(score => score.attributes.value_id !== action.payload)],\n        requesting: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/reducers/scores.js"],"names":["GET_READY_TO_STORE_SCORES","STORE_SCORES","DELETE_VALUE_FROM_SCORES","GET_READY_TO_DELETE_VALUE_FROM_SCORES","scores","state","requesting","action","type","payload","filter","score","attributes","value_id"],"mappings":"AAAA,SAAQA,yBAAR,EAAmCC,YAAnC,EAAiDC,wBAAjD,EAA2EC,qCAA3E,QAAuH,wBAAvH;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAG;AAACD,EAAAA,MAAM,EAAE,EAAT;AAAaE,EAAAA,UAAU,EAAE;AAAzB,CAAT,EAA0CC,MAA1C,KAAqD;AACvE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,yBAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHC,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAKL,YAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHD,QAAAA,MAAM,EAAE,CAAC,GAAGC,KAAK,CAACD,MAAV,EAAkB,GAAGG,MAAM,CAACE,OAA5B,CAFL;AAGHH,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAMJ,SAAKH,qCAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHC,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAKJ,wBAAL;AACI,aAAO;AACHE,QAAAA,MAAM,EAAE,CAAC,GAAGC,KAAK,CAACD,MAAN,CAAaM,MAAb,CAAoBC,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBC,QAAjB,KAA8BN,MAAM,CAACE,OAAlE,CAAJ,CADL;AAEHH,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ;AACI,aAAOD,KAAP;AAxBR;AA0BH,CA3BM","sourcesContent":["import {GET_READY_TO_STORE_SCORES, STORE_SCORES, DELETE_VALUE_FROM_SCORES, GET_READY_TO_DELETE_VALUE_FROM_SCORES} from \"../actions/actionTypes\"\n\nexport const scores = (state = {scores: [], requesting: false}, action) => {\n    switch(action.type){\n        case GET_READY_TO_STORE_SCORES:\n            return {\n                ...state,\n                requesting: true\n            }\n        case STORE_SCORES:\n            return {\n                ...state,\n                scores: [...state.scores, ...action.payload],\n                requesting: false\n            }   \n\n        case GET_READY_TO_DELETE_VALUE_FROM_SCORES:\n            return {\n                ...state,\n                requesting: true\n            }\n        case DELETE_VALUE_FROM_SCORES:\n            return {\n                scores: [...state.scores.filter(score => score.attributes.value_id !== action.payload)],\n                requesting: false\n            }        \n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}