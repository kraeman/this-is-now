{"ast":null,"code":"import { getReadyToDeleteActivity, deleteActivity, error } from \"./index\";\nexport function deleteActivityFetch(activityId) {\n  return dispatch => {\n    dispatch(getReadyToDeleteActivity());\n    fetch(`http://localhost:3000/activities/${activityId}`, {\n      method: 'DELETE',\n      headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n        \"Content-Type\": 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      if (!!data.message) {\n        dispatch(error(data.message));\n      } else {\n        dispatch(deleteActivity(data));\n      }\n    }).catch(err => {\n      dispatch(error(err));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/actions/deleteActivity.js"],"names":["getReadyToDeleteActivity","deleteActivity","error","deleteActivityFetch","activityId","dispatch","fetch","method","headers","accept","Authorization","sessionStorage","getItem","then","response","json","data","message","catch","err"],"mappings":"AAAA,SAAQA,wBAAR,EAAkCC,cAAlC,EAAkDC,KAAlD,QAA8D,SAA9D;AAEA,OAAO,SAASC,mBAAT,CAA6BC,UAA7B,EAAyC;AAC5C,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACL,wBAAwB,EAAzB,CAAR;AACAM,IAAAA,KAAK,CAAE,oCAAmCF,UAAW,EAAhD,EAAmD;AACtDG,MAAAA,MAAM,EAAE,QAD8C;AAEtDC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAELC,QAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAgC,EAFpD;AAGL,wBAAgB;AAHX;AAF6C,KAAnD,CAAL,CAQGC,IARH,CAQQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARpB,EASGF,IATH,CASQG,IAAI,IAAI;AACZ,UAAG,CAAC,CAACA,IAAI,CAACC,OAAV,EAAkB;AAChBZ,QAAAA,QAAQ,CAACH,KAAK,CAACc,IAAI,CAACC,OAAN,CAAN,CAAR;AACD,OAFD,MAEK;AACLZ,QAAAA,QAAQ,CAACJ,cAAc,CAACe,IAAD,CAAf,CAAR;AACD;AAAC,KAdJ,EAcME,KAdN,CAcYC,GAAG,IAAI;AACfd,MAAAA,QAAQ,CAACH,KAAK,CAACiB,GAAD,CAAN,CAAR;AACD,KAhBH;AAkBD,GApBD;AAqBD","sourcesContent":["import {getReadyToDeleteActivity, deleteActivity, error} from \"./index\"\n\nexport function deleteActivityFetch(activityId) {\n    return (dispatch) => {\n      dispatch(getReadyToDeleteActivity());\n      fetch(`http://localhost:3000/activities/${activityId}`, {\n        method: 'DELETE',\n        headers: {\n            accept: 'application/json',\n            Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n            \"Content-Type\": 'application/json'\n        }\n      })\n        .then(response => response.json())\n        .then(data => {\n          if(!!data.message){\n            dispatch(error(data.message))\n          }else{\n          dispatch(deleteActivity(data))\n        }}).catch(err => {\n          dispatch(error(err))\n        })\n\n    };\n  }"]},"metadata":{},"sourceType":"module"}