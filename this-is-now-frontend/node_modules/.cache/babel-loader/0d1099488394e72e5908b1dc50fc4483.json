{"ast":null,"code":"import { CLEAR_ERROR, ERROR, REFRESH_USER, UPDATE_USERS_VALUES, GET_READY_TO_REMOVE_VALUE_FROM_CURRENT_USER, REMOVE_VALUE_FROM_CURRENT_USER, LOGOUT, ADD_VALUE_TO_CURRENT_USER, GET_READY_TO_STORE_TOKEN, STORE_TOKEN, GET_READY_TO_UPDATE_CURRENT_USERS_VALUES } from \"../actions/actionTypes\";\nexport const user = (state = {\n  token: null,\n  username: null,\n  value_ids: [],\n  requesting: false,\n  error: null\n}, action) => {\n  switch (action.type) {\n    case GET_READY_TO_STORE_TOKEN:\n      return { ...state,\n        requesting: true\n      };\n\n    case STORE_TOKEN:\n      return {\n        token: action.payload.token,\n        username: action.payload.username,\n        id: action.payload.user_id,\n        value_ids: action.payload.value_ids,\n        requesting: false,\n        error: null\n      };\n\n    case REFRESH_USER:\n      return {\n        token: action.payload.token,\n        username: action.payload.username,\n        id: action.payload.user_id,\n        value_ids: state.value_ids,\n        requesting: false,\n        error: null\n      };\n\n    case GET_READY_TO_REMOVE_VALUE_FROM_CURRENT_USER:\n      return { ...state,\n        requesting: true\n      };\n\n    case REMOVE_VALUE_FROM_CURRENT_USER:\n      return { ...state,\n        value_ids: [...state.value_ids.filter(value => value !== action.payload)],\n        requesting: false\n      };\n\n    case LOGOUT:\n      return {\n        token: null,\n        username: null,\n        value_ids: [],\n        requesting: false,\n        error: null\n      };\n\n    case GET_READY_TO_UPDATE_CURRENT_USERS_VALUES:\n      return { ...state,\n        requesting: true\n      };\n\n    case ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    case CLEAR_ERROR:\n      return { ...state,\n        error: null\n      };\n\n    case UPDATE_USERS_VALUES:\n      return { ...state,\n        value_ids: action.payload,\n        requesting: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/reducers/users.js"],"names":["CLEAR_ERROR","ERROR","REFRESH_USER","UPDATE_USERS_VALUES","GET_READY_TO_REMOVE_VALUE_FROM_CURRENT_USER","REMOVE_VALUE_FROM_CURRENT_USER","LOGOUT","ADD_VALUE_TO_CURRENT_USER","GET_READY_TO_STORE_TOKEN","STORE_TOKEN","GET_READY_TO_UPDATE_CURRENT_USERS_VALUES","user","state","token","username","value_ids","requesting","error","action","type","payload","id","user_id","filter","value"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,KAArB,EAA4BC,YAA5B,EAA0CC,mBAA1C,EAA+DC,2CAA/D,EAA4GC,8BAA5G,EAA4IC,MAA5I,EAAoJC,yBAApJ,EAA+KC,wBAA/K,EAAyMC,WAAzM,EAAsNC,wCAAtN,QAAqQ,wBAArQ;AAEA,OAAO,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,KAAK,EAAE,IAAR;AAAcC,EAAAA,QAAQ,EAAE,IAAxB;AAA8BC,EAAAA,SAAS,EAAE,EAAzC;AAA6CC,EAAAA,UAAU,EAAE,KAAzD;AAAgEC,EAAAA,KAAK,EAAE;AAAvE,CAAT,EAAuFC,MAAvF,KAAkG;AAClH,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,wBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHI,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAKJ,SAAKP,WAAL;AACI,aAAO;AACHI,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP,KADnB;AAEHC,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeN,QAFtB;AAGHO,QAAAA,EAAE,EAAEH,MAAM,CAACE,OAAP,CAAeE,OAHhB;AAIHP,QAAAA,SAAS,EAAEG,MAAM,CAACE,OAAP,CAAeL,SAJvB;AAKHC,QAAAA,UAAU,EAAE,KALT;AAMHC,QAAAA,KAAK,EAAE;AANJ,OAAP;;AAQA,SAAKf,YAAL;AACI,aAAO;AACHW,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP,KADnB;AAEHC,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeN,QAFtB;AAGHO,QAAAA,EAAE,EAAEH,MAAM,CAACE,OAAP,CAAeE,OAHhB;AAIHP,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAJd;AAKHC,QAAAA,UAAU,EAAE,KALT;AAMHC,QAAAA,KAAK,EAAE;AANJ,OAAP;;AAUR,SAAOb,2CAAP;AACI,aAAO,EACH,GAAGQ,KADA;AAEHI,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAKA,SAAKX,8BAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHG,QAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACG,SAAN,CAAgBQ,MAAhB,CAAuBC,KAAK,IAAIA,KAAK,KAAKN,MAAM,CAACE,OAAjD,CAAJ,CAFR;AAGHJ,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAOR,SAAKV,MAAL;AACI,aAAO;AACHO,QAAAA,KAAK,EAAE,IADJ;AAEHC,QAAAA,QAAQ,EAAE,IAFP;AAGHC,QAAAA,SAAS,EAAE,EAHR;AAIHC,QAAAA,UAAU,EAAE,KAJT;AAKHC,QAAAA,KAAK,EAAE;AALJ,OAAP;;AAQA,SAAKP,wCAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHI,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAKJ,SAAKf,KAAL;AACA,aAAO,EACH,GAAGW,KADA;AAEHK,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAFX,OAAP;;AAMI,SAAKpB,WAAL;AACA,aAAO,EACH,GAAGY,KADA;AAEHK,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAKA,SAAKd,mBAAL;AAEA,aAAO,EACH,GAAGS,KADA;AAEHG,QAAAA,SAAS,EAAEG,MAAM,CAACE,OAFf;AAGHJ,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAMR;AACI,aAAOJ,KAAP;AA9ER;AAgFH,CAjFM","sourcesContent":["import {CLEAR_ERROR, ERROR, REFRESH_USER, UPDATE_USERS_VALUES, GET_READY_TO_REMOVE_VALUE_FROM_CURRENT_USER, REMOVE_VALUE_FROM_CURRENT_USER, LOGOUT, ADD_VALUE_TO_CURRENT_USER, GET_READY_TO_STORE_TOKEN, STORE_TOKEN, GET_READY_TO_UPDATE_CURRENT_USERS_VALUES} from \"../actions/actionTypes\"\n\nexport const user = (state = {token: null, username: null, value_ids: [], requesting: false, error: null}, action) => {\n    switch(action.type){\n        case GET_READY_TO_STORE_TOKEN:\n            return {\n                ...state,\n                requesting: true\n            }  \n            \n        case STORE_TOKEN:\n            return {\n                token: action.payload.token,\n                username: action.payload.username,\n                id: action.payload.user_id,\n                value_ids: action.payload.value_ids,\n                requesting: false,\n                error: null\n            }\n            case REFRESH_USER:\n                return {\n                    token: action.payload.token,\n                    username: action.payload.username,\n                    id: action.payload.user_id,\n                    value_ids: state.value_ids,\n                    requesting: false,\n                    error: null\n                }\n        \n      \n        case   GET_READY_TO_REMOVE_VALUE_FROM_CURRENT_USER:\n            return {\n                ...state,\n                requesting: true\n            }\n\n            case REMOVE_VALUE_FROM_CURRENT_USER:\n                return {\n                    ...state,\n                    value_ids: [...state.value_ids.filter(value => value !== action.payload)],\n                    requesting: false\n                }    \n                \n\n        case LOGOUT:\n            return {\n                token: null,\n                username: null,\n                value_ids: [],\n                requesting: false,\n                error: null\n            }     \n        \n            case GET_READY_TO_UPDATE_CURRENT_USERS_VALUES:\n                return {\n                    ...state,\n                    requesting: true\n                }  \n\n            case ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n\n                case CLEAR_ERROR:\n                return {\n                    ...state,\n                    error: null\n                }\n\n                case UPDATE_USERS_VALUES:\n                \n                return {\n                    ...state,\n                    value_ids: action.payload,\n                    requesting: false\n                }\n\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}