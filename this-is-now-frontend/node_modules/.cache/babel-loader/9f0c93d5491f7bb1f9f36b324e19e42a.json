{"ast":null,"code":"import { getReadyToStoreToken, storeToken, error } from \"./index\";\nexport function fetchUser(username, password) {\n  return dispatch => {\n    dispatch(getReadyToStoreToken());\n    fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    }).then(response => response.json()).then(data => {\n      if (!data.token) {\n        dispatch(error(data.message));\n      } else {\n        sessionStorage.setItem('token', data.token);\n        sessionStorage.setItem('id', data.user_id);\n        sessionStorage.setItem('username', data.username);\n        sessionStorage.setItem('value_ids', JSON.stringify(data.value_ids));\n        dispatch(storeToken(data));\n      }\n    }).catch(err => {\n      dispatch(error(err));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/actions/fetchUser.js"],"names":["getReadyToStoreToken","storeToken","error","fetchUser","username","password","dispatch","fetch","method","headers","body","JSON","stringify","user","then","response","json","data","token","message","sessionStorage","setItem","user_id","value_ids","catch","err"],"mappings":"AAAA,SAAQA,oBAAR,EAA8BC,UAA9B,EAA0CC,KAA1C,QAAsD,SAAtD;AAEA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,QAA7B,EAAuC;AAC1C,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;AACAO,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAE/BC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFsB;AAK/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,IAAI,EAAE;AAACT,UAAAA,QAAD;AAAWC,UAAAA;AAAX;AAAP,OAAf;AALyB,KAAhC,CAAL,CAOGS,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,IAAI,IAAI;AACZ,UAAG,CAACA,IAAI,CAACC,KAAT,EAAe;AACbZ,QAAAA,QAAQ,CAACJ,KAAK,CAACe,IAAI,CAACE,OAAN,CAAN,CAAR;AACD,OAFD,MAEK;AACLC,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCJ,IAAI,CAACC,KAArC;AACAE,QAAAA,cAAc,CAACC,OAAf,CAAuB,IAAvB,EAA6BJ,IAAI,CAACK,OAAlC;AACAF,QAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCJ,IAAI,CAACb,QAAxC;AACAgB,QAAAA,cAAc,CAACC,OAAf,CAAuB,WAAvB,EAAoCV,IAAI,CAACC,SAAL,CAAeK,IAAI,CAACM,SAApB,CAApC;AACAjB,QAAAA,QAAQ,CAACL,UAAU,CAACgB,IAAD,CAAX,CAAR;AACC;AACF,KAlBH,EAkBKO,KAlBL,CAkBWC,GAAG,IAAI;AACdnB,MAAAA,QAAQ,CAACJ,KAAK,CAACuB,GAAD,CAAN,CAAR;AACD,KApBH;AAqBD,GAvBD;AAwBD","sourcesContent":["import {getReadyToStoreToken, storeToken, error} from \"./index\"\n\nexport function fetchUser(username, password) {\n    return (dispatch) => {\n      dispatch(getReadyToStoreToken());\n      fetch('http://localhost:3000/login', {\n        method: 'POST',\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: JSON.stringify({user: {username, password}})\n      })\n        .then(response => response.json())\n        .then(data => {\n          if(!data.token){\n            dispatch(error(data.message))\n          }else{\n          sessionStorage.setItem('token', data.token)\n          sessionStorage.setItem('id', data.user_id)\n          sessionStorage.setItem('username', data.username)\n          sessionStorage.setItem('value_ids', JSON.stringify(data.value_ids))\n          dispatch(storeToken(data))\n          }\n        }).catch(err => {\n          dispatch(error(err))\n        })\n    };\n  }\n"]},"metadata":{},"sourceType":"module"}