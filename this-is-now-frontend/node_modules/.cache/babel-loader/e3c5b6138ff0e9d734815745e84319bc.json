{"ast":null,"code":"import { ADD_VALUE, GET_READY_TO_ADD_VALUE, GET_READY_TO_DELETE_VALUE, GET_READY_TO_STORE_VALUES, STORE_VALUES, DELETE_VALUE } from \"../actions/actionTypes\";\nexport const values = (state = {\n  values: [],\n  requesting: false\n}, action) => {\n  switch (action.type) {\n    case ADD_VALUE:\n      return {\n        values: [...state.values, action.payload],\n        requesting: false\n      };\n\n    case GET_READY_TO_ADD_VALUE:\n      return { ...state,\n        requesting: true\n      };\n\n    case GET_READY_TO_STORE_VALUES:\n      return { ...state,\n        requesting: true\n      };\n\n    case STORE_VALUES:\n      return {\n        values: action.payload.map(value => value.attributes),\n        requesting: false\n      };\n\n    case DELETE_VALUE:\n      return {\n        values: [...state.values].filter(value => value.id !== action.payload),\n        requesting: false\n      };\n\n    case GET_READY_TO_DELETE_VALUE:\n      return { ...state,\n        requesting: true\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/reducers/values.js"],"names":["ADD_VALUE","GET_READY_TO_ADD_VALUE","GET_READY_TO_DELETE_VALUE","GET_READY_TO_STORE_VALUES","STORE_VALUES","DELETE_VALUE","values","state","requesting","action","type","payload","map","value","attributes","filter","id"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,sBAAnB,EAA2CC,yBAA3C,EAAsEC,yBAAtE,EAAiGC,YAAjG,EAA+GC,YAA/G,QAAkI,wBAAlI;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAG;AAACD,EAAAA,MAAM,EAAE,EAAT;AAAaE,EAAAA,UAAU,EAAE;AAAzB,CAAT,EAA0CC,MAA1C,KAAqD;AACvE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,SAAL;AACI,aAAO;AACHM,QAAAA,MAAM,EAAE,CAAC,GAAGC,KAAK,CAACD,MAAV,EAAkBG,MAAM,CAACE,OAAzB,CADL;AAEHH,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAKJ,SAAKP,sBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHC,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAKL,yBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHC,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAKJ,YAAL;AACI,aAAO;AACHE,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAmBC,KAAK,IAAIA,KAAK,CAACC,UAAlC,CADL;AAEHN,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIA,SAAKH,YAAL;AACI,aAAO;AACHC,QAAAA,MAAM,EAAE,CAAC,GAAGC,KAAK,CAACD,MAAV,EAAkBS,MAAlB,CAAyBF,KAAK,IAAIA,KAAK,CAACG,EAAN,KAAaP,MAAM,CAACE,OAAtD,CADL;AAEHH,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAKA,SAAKN,yBAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHC,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIZ;AACI,aAAOD,KAAP;AAlCR;AAoCH,CArCM","sourcesContent":["import {ADD_VALUE, GET_READY_TO_ADD_VALUE, GET_READY_TO_DELETE_VALUE, GET_READY_TO_STORE_VALUES, STORE_VALUES, DELETE_VALUE} from \"../actions/actionTypes\"\n\nexport const values = (state = {values: [], requesting: false}, action) => {\n    switch(action.type){\n        case ADD_VALUE:\n            return {\n                values: [...state.values, action.payload],\n                requesting: false\n                }\n\n        case GET_READY_TO_ADD_VALUE:\n            return {\n                ...state,\n                requesting: true\n            }   \n        case GET_READY_TO_STORE_VALUES:\n            return {\n                ...state,\n                requesting: true\n            }\n        case STORE_VALUES:\n            return {\n                values: action.payload.map(value => value.attributes),\n                requesting: false\n            }\n            case DELETE_VALUE:\n                return {\n                    values: [...state.values].filter(value => value.id !== action.payload),\n                    requesting: false\n                }\n\n                case GET_READY_TO_DELETE_VALUE:\n                    return {\n                        ...state,\n                        requesting: true\n                    }    \n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}