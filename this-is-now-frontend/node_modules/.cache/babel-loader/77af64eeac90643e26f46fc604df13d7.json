{"ast":null,"code":"var _jsxFileName = \"/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/components/values/ValuesList.js\";\nimport { Stack } from \"stack-styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ValuesList = props => {\n  const conditionallyShowDeleteButton = value => {\n    if (value.creator_id === parseInt(sessionStorage.getItem(\"id\"))) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteValue(value.id),\n        children: \"Delete this value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const createValuesFromList = () => {\n    //sort is destructive which is why I spread to make a copy\n    return [...props.values].sort((a, b) => a.name > b.name ? 1 : -1).map(value => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: () => props.addOrRemoveFromUsersValues(value.id),\n          type: \"checkbox\",\n          checked: props.usersValues.includes(value.id),\n          name: `${value.id}`,\n          value: value.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: `${value.id}`,\n          children: [\" \", value.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 73\n        }, this), conditionallyShowDeleteButton(value)]\n      }, value.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.updateUserValues(),\n      children: \"Submit Changes To Your Values\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        gridGap: 3,\n        numColumns: [1, 2, 3, 4],\n        children: createValuesFromList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ValuesList;\nexport default ValuesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValuesList\");","map":{"version":3,"sources":["/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/components/values/ValuesList.js"],"names":["Stack","ValuesList","props","conditionallyShowDeleteButton","value","creator_id","parseInt","sessionStorage","getItem","deleteValue","id","createValuesFromList","values","sort","a","b","name","map","addOrRemoveFromUsersValues","usersValues","includes","updateUserValues"],"mappings":";AAAA,SAAQA,KAAR,QAAoB,cAApB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE1B,QAAMC,6BAA6B,GAAIC,KAAD,IAAW;AAC7C,QAAGA,KAAK,CAACC,UAAN,KAAqBC,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,IAAvB,CAAD,CAAhC,EAA+D;AAC3D,0BAAO;AAAQ,QAAA,OAAO,EAAE,MAAMN,KAAK,CAACO,WAAN,CAAkBL,KAAK,CAACM,EAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ,GAJD;;AAMA,QAAMC,oBAAoB,GAAG,MAAM;AAC/B;AACA,WAAO,CAAC,GAAGT,KAAK,CAACU,MAAV,EAAkBC,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAA1D,EAA6DC,GAA7D,CAAiEb,KAAK,IAAI;AAC7E,0BAAO;AAAA,gCACK;AAAO,UAAA,QAAQ,EAAE,MAAMF,KAAK,CAACgB,0BAAN,CAAiCd,KAAK,CAACM,EAAvC,CAAvB;AAAmE,UAAA,IAAI,EAAC,UAAxE;AAAmF,UAAA,OAAO,EAAER,KAAK,CAACiB,WAAN,CAAkBC,QAAlB,CAA2BhB,KAAK,CAACM,EAAjC,CAA5F;AAAmI,UAAA,IAAI,EAAG,GAAEN,KAAK,CAACM,EAAG,EAArJ;AAAwJ,UAAA,KAAK,EAAEN,KAAK,CAACM;AAArK;AAAA;AAAA;AAAA;AAAA,gBADL,eAEK;AAAO,UAAA,GAAG,EAAG,GAAEN,KAAK,CAACM,EAAG,EAAxB;AAAA,0BAA6BN,KAAK,CAACY,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL,eAEqD;AAAA;AAAA;AAAA;AAAA,gBAFrD,EAGMb,6BAA6B,CAACC,KAAD,CAHnC;AAAA,SAAUA,KAAK,CAACM,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AAKH,KANM,CAAP;AAOC,GATL;;AAWA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMR,KAAK,CAACmB,gBAAN,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGA,QAAC,KAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eACS;AAAA;AAAA;AAAA;AAAA,cADT,eAEA,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAmB,QAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA/B;AAAA,kBACKV,oBAAoB;AADzB;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA9BD;;KAAMV,U;AAgCN,eAAeA,UAAf","sourcesContent":["import {Stack} from \"stack-styled\"\n\nconst ValuesList = (props) => {\n    \n    const conditionallyShowDeleteButton = (value) => {  \n        if(value.creator_id === parseInt(sessionStorage.getItem(\"id\"))){\n            return <button onClick={() => props.deleteValue(value.id)}>Delete this value</button>\n        }\n    }\n\n    const createValuesFromList = () => {\n        //sort is destructive which is why I spread to make a copy\n        return [...props.values].sort((a, b) => (a.name > b.name) ? 1 : -1).map(value => {\n            return <div key={value.id}>\n                        <input onChange={() => props.addOrRemoveFromUsersValues(value.id)} type=\"checkbox\" checked={props.usersValues.includes(value.id)}  name={`${value.id}`} value={value.id}/>\n                        <label for={`${value.id}`}> {value.name}</label><br></br>\n                        {conditionallyShowDeleteButton(value)}\n                   </div>\n        })\n        }\n\n    return (\n        <div>\n            <br></br>\n            <button onClick={() => props.updateUserValues()}>Submit Changes To Your Values</button>\n        <Stack>\n            <br/><br/>\n        <Stack gridGap={3} numColumns={[1, 2, 3, 4]}>\n            {createValuesFromList()}\n            </Stack></Stack>\n        </div>\n    )\n}\n\nexport default ValuesList;"]},"metadata":{},"sourceType":"module"}