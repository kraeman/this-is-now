{"ast":null,"code":"var _jsxFileName = \"/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/components/activities/NewActivityForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { createNewActivityPost } from \"../../actions/createNewActivity\";\nimport AssociatedValue from './AssociatedValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewActivityForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      description: '',\n      numberOfValuesAddedToActivity: 0,\n      associatedValues: []\n    };\n\n    this.checkIn = (e, id, score) => {\n      e.preventDefault();\n      this.setState({\n        name: this.state.name,\n        description: this.state.description,\n        numberOfValuesAddedToActivity: this.state.numberOfValuesAddedToActivity,\n        associatedValues: [...this.state.associatedValues, {\n          id: id,\n          score: score\n        }]\n      });\n    };\n\n    this.checkOut = (e, id) => {\n      e.preventDefault();\n      this.setState({\n        name: this.state.name,\n        description: this.state.description,\n        numberOfValuesAddedToActivity: this.state.numberOfValuesAddedToActivity,\n        associatedValues: this.state.associatedValues.filter(value => value.id !== id)\n      });\n    };\n\n    this.makeAssociatedValuesBasedOnNumberAssociated = () => {\n      //numberOfValuesAddedToActivity and the length of this.state.associatedValues is different because one is checked in values and one is number of components regardless of checked in or out\n      const arrayOfAssociatedValueComponents = [];\n\n      for (let i = 0; i < this.state.numberOfValuesAddedToActivity; i++) {\n        arrayOfAssociatedValueComponents.push( /*#__PURE__*/_jsxDEV(AssociatedValue, {\n          checkIn: this.checkIn,\n          checkOut: this.checkOut,\n          all_values: this.props.all_values,\n          associatedValues: this.state.associatedValues\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 59\n        }, this));\n      }\n\n      return arrayOfAssociatedValueComponents;\n    };\n\n    this.handleOnSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.associatedValues.length > 0) {\n        this.props.createNewActivityPost(this.state.name, this.state.description, this.state.associatedValues, sessionStorage.getItem('token'));\n        this.setState({\n          name: '',\n          description: '',\n          numberOfValuesAddedToActivity: 0,\n          associatedValues: []\n        });\n      }\n    };\n\n    this.handleOnNameChange = e => {\n      this.setState({\n        name: e.target.value,\n        description: this.state.description,\n        numberOfValuesAddedToActivity: this.state.numberOfValuesAddedToActivity,\n        associatedValues: this.state.associatedValues\n      });\n    };\n\n    this.handleOnDescriptionChange = e => {\n      this.setState({\n        name: this.state.name,\n        description: e.target.value,\n        numberOfValuesAddedToActivity: this.state.numberOfValuesAddedToActivity,\n        associatedValues: this.state.associatedValues\n      });\n    };\n\n    this.addAnotherAssociatedValueComponent = e => {\n      e.preventDefault();\n      this.setState({\n        name: this.state.name,\n        description: this.state.description,\n        numberOfValuesAddedToActivity: this.state.numberOfValuesAddedToActivity + 1,\n        associatedValues: this.state.associatedValues\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"form-title\",\n        children: \"Create a new Activity or Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 col-md-offset-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel panel-default\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => this.handleOnSubmit(e),\n                className: \"form-horizontal\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"title\",\n                    className: \"col-md-4 control-label\",\n                    children: \"Activity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-5\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control\",\n                      type: \"text\",\n                      name: \"title\",\n                      value: this.state.name,\n                      onChange: e => this.handleOnNameChange(e),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"col-md-4 control-label\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-5\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      className: \"form-control\",\n                      type: \"text\",\n                      name: \"title\",\n                      value: this.state.description,\n                      onChange: e => this.handleOnDescriptionChange(e),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"mark\", {\n                  children: \"MUST HAVE AT LEAST ONE VALUE ASSOCIATED\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 90\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => this.addAnotherAssociatedValueComponent(e),\n                  children: \"ADD ANOTHER VALUE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), this.makeAssociatedValuesBasedOnNumberAssociated(), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6 col-md-offset-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-default\",\n                      children: \"SUBMIT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createNewActivityPost: (name, description, associatedValues, token) => dispatch(createNewActivityPost(name, description, associatedValues, token))\n  };\n}\n\nfunction mapState(currentState) {\n  return {\n    all_values: currentState.values.values\n  };\n}\n\nexport default connect(mapState, mapDispatchToProps)(NewActivityForm);","map":{"version":3,"sources":["/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/components/activities/NewActivityForm.js"],"names":["React","Component","connect","createNewActivityPost","AssociatedValue","NewActivityForm","state","name","description","numberOfValuesAddedToActivity","associatedValues","checkIn","e","id","score","preventDefault","setState","checkOut","filter","value","makeAssociatedValuesBasedOnNumberAssociated","arrayOfAssociatedValueComponents","i","push","props","all_values","handleOnSubmit","length","sessionStorage","getItem","handleOnNameChange","target","handleOnDescriptionChange","addAnotherAssociatedValueComponent","render","mapDispatchToProps","dispatch","token","mapState","currentState","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\"\nimport { createNewActivityPost } from \"../../actions/createNewActivity\";\nimport AssociatedValue from './AssociatedValue';\n\nclass NewActivityForm extends Component {\n\n    state = {\n        name: '',\n        description: '',\n        numberOfValuesAddedToActivity: 0,\n        associatedValues: []\n    }\n\n    checkIn = (e, id, score) => {\n        e.preventDefault()\n        this.setState({\n            name: this.state.name,\n            description: this.state.description,\n            numberOfValuesAddedToActivity: this.state.numberOfValuesAddedToActivity,\n            associatedValues: [...this.state.associatedValues, {id: id, score: score}]\n        })\n        \n    }\n\n    checkOut = (e, id) => {\n        e.preventDefault()        \n        this.setState({\n            name: this.state.name,\n            description: this.state.description,\n            numberOfValuesAddedToActivity: this.state.numberOfValuesAddedToActivity,\n            associatedValues: this.state.associatedValues.filter((value) => value.id !== id)\n        })\n        \n    }\n\n        makeAssociatedValuesBasedOnNumberAssociated = () => {\n            //numberOfValuesAddedToActivity and the length of this.state.associatedValues is different because one is checked in values and one is number of components regardless of checked in or out\n                const arrayOfAssociatedValueComponents = []\n                for (let i = 0; i < this.state.numberOfValuesAddedToActivity; i++) {\n                    arrayOfAssociatedValueComponents.push(<AssociatedValue key={i} checkIn={this.checkIn} checkOut={this.checkOut} all_values={this.props.all_values} associatedValues={this.state.associatedValues}/>)\n                }\n                return arrayOfAssociatedValueComponents\n        }\n\n\n    handleOnSubmit = (e) => {\n        e.preventDefault()\n        if(this.state.associatedValues.length > 0){\n            this.props.createNewActivityPost(this.state.name, this.state.description, this.state.associatedValues, sessionStorage.getItem('token'))\n            this.setState({\n                name: '',\n                description: '',\n                numberOfValuesAddedToActivity: 0,\n                associatedValues: []\n            })\n        }\n    }\n\n    handleOnNameChange = (e) => {\n        this.setState({\n            name: e.target.value,\n            description: this.state.description,\n            numberOfValuesAddedToActivity: this.state.numberOfValuesAddedToActivity,\n            associatedValues: this.state.associatedValues\n        })\n    }\n\n    handleOnDescriptionChange = (e) => {\n        this.setState({\n            name: this.state.name,\n            description: e.target.value,\n            numberOfValuesAddedToActivity: this.state.numberOfValuesAddedToActivity,\n            associatedValues: this.state.associatedValues\n        })\n    }\n\n    addAnotherAssociatedValueComponent = (e) => {\n        e.preventDefault()\n        this.setState({\n            name: this.state.name,\n            description:this.state.description,\n            numberOfValuesAddedToActivity: this.state.numberOfValuesAddedToActivity + 1,\n            associatedValues: this.state.associatedValues\n        })\n    }\n\n    render() {\n    return(\n        <div className=\"container\">\n            <h3 className=\"form-title\">Create a new Activity or Goal</h3>\n                <div className=\"row\">\n                    <div className=\"col-md-8 col-md-offset-2\">\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-body\">\n                                <form onSubmit={(e) => this.handleOnSubmit(e)} className=\"form-horizontal\" >\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"title\" className=\"col-md-4 control-label\">Activity</label>\n                                        <div className=\"col-md-5\">\n                                        <input\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            name=\"title\"\n                                            value={this.state.name}\n                                            onChange={(e) => this.handleOnNameChange(e)}\n                                            required\n                                        />\n                                        </div>\n                                        <label className=\"col-md-4 control-label\">Description</label>\n                                        <div className=\"col-md-5\">\n                                        <textarea\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            name=\"title\"\n                                            value={this.state.description}\n                                            onChange={(e) => this.handleOnDescriptionChange(e)}\n                                            required\n                                        />\n                                        </div>\n                                    </div>\n                                    <mark>MUST HAVE AT LEAST ONE VALUE ASSOCIATED</mark> <br></br>\n                                    <button onClick={(e) => this.addAnotherAssociatedValueComponent(e)}>ADD ANOTHER VALUE</button>\n                                    {this.makeAssociatedValuesBasedOnNumberAssociated()}\n                                    <div className=\"form-group\">\n                                        <div className=\"col-md-6 col-md-offset-4\">\n                                        <button type=\"submit\" className=\"btn btn-default\">SUBMIT</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    )\n    }\n}\nfunction mapDispatchToProps(dispatch){\n    return {\n        createNewActivityPost: (name, description, associatedValues, token) => dispatch(createNewActivityPost(name, description, associatedValues, token)),\n    }\n  }\n\nfunction mapState(currentState){\n    return { \n        all_values: currentState.values.values\n     }\n  }\n  \nexport default connect(mapState, mapDispatchToProps)(NewActivityForm);"]},"metadata":{},"sourceType":"module"}