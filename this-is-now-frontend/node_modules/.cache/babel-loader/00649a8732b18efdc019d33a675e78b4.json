{"ast":null,"code":"import { storeToken, getReadyToStoreToken, error } from \"./index\";\nexport function createUser(username, password, checkPassword) {\n  return dispatch => {\n    dispatch(getReadyToStoreToken());\n    fetch('http://localhost:3000/signup', {\n      method: 'POST',\n      headers: {\n        accept: \"application/json\",\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password,\n          checkPassword\n        }\n      })\n    }).then(response => response.json()).then(data => {\n      if (!data.token) {\n        dispatch(error(data.message));\n      } else {\n        sessionStorage.setItem('token', data.token);\n        sessionStorage.setItem('id', data.user_id);\n        sessionStorage.setItem('username', data.username);\n        sessionStorage.setItem('value_ids', JSON.stringify([]));\n        return dispatch(storeToken(data));\n      }\n    }).catch(err => {\n      dispatch(error(err));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/actions/createUser.js"],"names":["storeToken","getReadyToStoreToken","error","createUser","username","password","checkPassword","dispatch","fetch","method","headers","accept","body","JSON","stringify","user","then","response","json","data","token","message","sessionStorage","setItem","user_id","catch","err"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,oBAApB,EAA0CC,KAA1C,QAAsD,SAAtD;AAEA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,aAAxC,EAAuD;AAC1D,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;AACAO,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEL,wBAAgB;AAFX,OAF2B;AAMpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,IAAI,EAAE;AAACX,UAAAA,QAAD;AAAWC,UAAAA,QAAX;AAAqBC,UAAAA;AAArB;AAAP,OAAf;AAN8B,KAAjC,CAAL,CAQGU,IARH,CAQQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARpB,EASGF,IATH,CASQG,IAAI,IAAI;AACZ,UAAG,CAACA,IAAI,CAACC,KAAT,EAAe;AACbb,QAAAA,QAAQ,CAACL,KAAK,CAACiB,IAAI,CAACE,OAAN,CAAN,CAAR;AACD,OAFD,MAEK;AACLC,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCJ,IAAI,CAACC,KAArC;AACAE,QAAAA,cAAc,CAACC,OAAf,CAAuB,IAAvB,EAA6BJ,IAAI,CAACK,OAAlC;AACAF,QAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCJ,IAAI,CAACf,QAAxC;AACAkB,QAAAA,cAAc,CAACC,OAAf,CAAuB,WAAvB,EAAoCV,IAAI,CAACC,SAAL,CAAe,EAAf,CAApC;AACA,eAAOP,QAAQ,CAACP,UAAU,CAACmB,IAAD,CAAX,CAAf;AACD;AAAC,KAlBJ,EAkBMM,KAlBN,CAkBYC,GAAG,IAAI;AACfnB,MAAAA,QAAQ,CAACL,KAAK,CAACwB,GAAD,CAAN,CAAR;AACD,KApBH;AAqBD,GAvBD;AAwBD","sourcesContent":["import {storeToken, getReadyToStoreToken, error} from \"./index\"\n\nexport function createUser(username, password, checkPassword) {\n    return (dispatch) => {\n      dispatch(getReadyToStoreToken());\n      fetch('http://localhost:3000/signup', {\n        method: 'POST',\n        headers: {\n          accept: \"application/json\",\n            \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify({user: {username, password, checkPassword}})\n      })\n        .then(response => response.json())\n        .then(data => {\n          if(!data.token){\n            dispatch(error(data.message))\n          }else{          \n          sessionStorage.setItem('token', data.token)\n          sessionStorage.setItem('id', data.user_id)\n          sessionStorage.setItem('username', data.username)\n          sessionStorage.setItem('value_ids', JSON.stringify([]))\n          return dispatch(storeToken(data))\n        }}).catch(err => {\n          dispatch(error(err))\n        })\n    };\n  }\n\n\n \n\n"]},"metadata":{},"sourceType":"module"}