{"ast":null,"code":"var _jsxFileName = \"/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/containers/ActivitiesValuesContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport fetchActivities from '../actions/fetchActivities';\nimport ValuesList from '../components/values/ValuesList';\nimport { deleteValueFetch } from '../actions/deleteValue';\nimport NewValueForm from '../components/values/NewValueForm';\nimport { putUserInStoreAfterPageRefresh } from '../actions/putUserInStoreAfterPageRefresh';\nimport { logout } from '../actions/index';\nimport { updateUsersValues } from '../actions/updateUsersValues';\nimport { deleteActivityFetch } from '../actions/deleteActivity';\nimport AllActivitiesList from '../components/activities/AllActivitiesList';\nimport RankedActivitiesList from '../components/activities/RankedActivitiesList';\nimport NewActivityForm from '../components/activities/NewActivityForm';\nimport '../App.css';\nimport LetterAdder from './LetterAdder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ActivitiesValuesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      associatedValues: JSON.parse(sessionStorage.getItem('value_ids'))\n    };\n\n    this.deleteValue = valueId => {\n      this.props.deleteValueFetch(valueId, sessionStorage.getItem('token'));\n    };\n\n    this.updateUserValues = () => {\n      this.props.updateUsersValues(this.state.associatedValues, sessionStorage.getItem('id'), sessionStorage.getItem('token'));\n    };\n\n    this.addOrRemoveFromUsersValues = valueId => {\n      if (!this.state.associatedValues.includes(valueId)) {\n        this.setState({\n          associatedValues: [...this.state.associatedValues, valueId]\n        });\n      } else {\n        this.setState({\n          associatedValues: this.state.associatedValues.filter(id => id !== valueId)\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      //Only runs if user accidentally refreshes page and clears redux store\n      if (!!sessionStorage.getItem('token') && !this.props.current_user.username) {\n        this.props.putUserInStoreAfterPageRefresh(sessionStorage.getItem(\"token\"), sessionStorage.getItem(\"username\"), JSON.parse(sessionStorage.getItem(\"value_ids\")));\n        this.props.fetchActivities(sessionStorage.getItem(\"token\"));\n      }\n    };\n\n    this.calculatedScores = () => {\n      const rankedActivities = [];\n      this.props.scores.forEach(score => {\n        if (JSON.parse(sessionStorage.getItem('value_ids')).includes(score.attributes.value_id)) {\n          if (rankedActivities.find(activity => activity.id === score.attributes.activity_id)) {\n            rankedActivities.find(activity => activity.id === score.attributes.activity_id).score += score.attributes.score;\n          } else {\n            rankedActivities.push({\n              id: score.attributes.activity_id,\n              score: score.attributes.score\n            });\n          }\n        }\n      });\n      return rankedActivities.sort((a, b) => a.score > b.score ? -1 : 1);\n    };\n\n    this.deleteActivity = activityId => {\n      this.props.deleteActivityFetch(activityId);\n    };\n  }\n\n  render() {\n    if (!sessionStorage.getItem('token')) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        push: true,\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(LetterAdder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.logout(),\n        style: {\n          maxHeight: \"30px\"\n        },\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowC\",\n        id: \"value_container\",\n        style: {\n          backgroundColor: 'white',\n          borderWidth: '5px',\n          borderColor: '#aaaaaa',\n          borderStyle: 'solid',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          left: '70%',\n          top: '12%',\n          transform: 'translate(-50%, -50%)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(NewActivityForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RankedActivitiesList, {\n          activities: this.props.activities,\n          rankedActivities: this.calculatedScores()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AllActivitiesList, {\n          deleteActivityFetch: this.deleteActivity,\n          activities: this.props.activities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowC\",\n        id: \"value_container\",\n        style: {\n          backgroundColor: 'white',\n          borderWidth: '5px',\n          borderColor: '#aaaaaa',\n          borderStyle: 'solid',\n          position: 'absolute',\n          left: '0%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(NewValueForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(ValuesList, {\n          addOrRemoveFromUsersValues: this.addOrRemoveFromUsersValues,\n          updateUserValues: this.updateUserValues,\n          usersValues: this.state.associatedValues,\n          deleteValue: this.deleteValue,\n          values: this.props.values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction mapStateToProps(currentState) {\n  return {\n    values: currentState.values.values,\n    activities: currentState.activities.activities,\n    scores: currentState.scores.scores,\n    current_user: currentState.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchActivities: token => dispatch(fetchActivities(token)),\n    logout: () => dispatch(logout()),\n    deleteValueFetch: (valueId, token) => dispatch(deleteValueFetch(valueId, token)),\n    putUserInStoreAfterPageRefresh: (token, username, value_ids) => dispatch(putUserInStoreAfterPageRefresh(token, username, value_ids)),\n    updateUsersValues: (values, userId, token) => dispatch(updateUsersValues(values, userId, token)),\n    deleteActivityFetch: activityId => dispatch(deleteActivityFetch(activityId))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivitiesValuesContainer);","map":{"version":3,"sources":["/Users/kraewind/Documents/Flatiron/Phase 5/this-is-now/this-is-now-frontend/src/containers/ActivitiesValuesContainer.js"],"names":["React","Component","connect","Redirect","fetchActivities","ValuesList","deleteValueFetch","NewValueForm","putUserInStoreAfterPageRefresh","logout","updateUsersValues","deleteActivityFetch","AllActivitiesList","RankedActivitiesList","NewActivityForm","LetterAdder","ActivitiesValuesContainer","state","associatedValues","JSON","parse","sessionStorage","getItem","deleteValue","valueId","props","updateUserValues","addOrRemoveFromUsersValues","includes","setState","filter","id","componentDidMount","current_user","username","calculatedScores","rankedActivities","scores","forEach","score","attributes","value_id","find","activity","activity_id","push","sort","a","b","deleteActivity","activityId","render","maxHeight","backgroundColor","borderWidth","borderColor","borderStyle","alignItems","justifyContent","position","left","top","transform","activities","values","mapStateToProps","currentState","user","mapDispatchToProps","dispatch","token","value_ids","userId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\"\nimport { Redirect } from 'react-router-dom'\nimport fetchActivities from '../actions/fetchActivities'\nimport ValuesList from '../components/values/ValuesList'\nimport {deleteValueFetch} from '../actions/deleteValue'\nimport NewValueForm from '../components/values/NewValueForm'\nimport {putUserInStoreAfterPageRefresh} from '../actions/putUserInStoreAfterPageRefresh'\nimport { logout } from '../actions/index';\nimport { updateUsersValues } from '../actions/updateUsersValues';\nimport {deleteActivityFetch} from '../actions/deleteActivity'\nimport AllActivitiesList from '../components/activities/AllActivitiesList';\nimport RankedActivitiesList from '../components/activities/RankedActivitiesList'\nimport NewActivityForm from '../components/activities/NewActivityForm'\nimport '../App.css'\nimport LetterAdder from './LetterAdder';\n\n\nclass ActivitiesValuesContainer extends Component {\n\n  state = {\n    associatedValues: JSON.parse(sessionStorage.getItem('value_ids'))\n  }\n\n\n  deleteValue = (valueId) => {\n    this.props.deleteValueFetch(valueId, sessionStorage.getItem('token'))\n  }\n\n  updateUserValues = () => {\n    this.props.updateUsersValues(this.state.associatedValues, sessionStorage.getItem('id'), sessionStorage.getItem('token'))\n  }\n  \n  addOrRemoveFromUsersValues = (valueId) => {\n    if(!this.state.associatedValues.includes(valueId)){\n      this.setState({\n        associatedValues: [...this.state.associatedValues, valueId]\n      })\n    }else {\n      this.setState({\n        associatedValues: this.state.associatedValues.filter(id => id !== valueId)\n      })\n    }\n  }\n\n  componentDidMount = () => {\n    //Only runs if user accidentally refreshes page and clears redux store\n    if(!!sessionStorage.getItem('token') && !this.props.current_user.username){\n      this.props.putUserInStoreAfterPageRefresh(sessionStorage.getItem(\"token\"), sessionStorage.getItem(\"username\"), JSON.parse(sessionStorage.getItem(\"value_ids\")))\n      this.props.fetchActivities(sessionStorage.getItem(\"token\"))\n    }\n  }\n\n\n  calculatedScores = () => {\n    const rankedActivities = []\n    this.props.scores.forEach(score => {\n      if (JSON.parse(sessionStorage.getItem('value_ids')).includes(score.attributes.value_id)){\n        if (rankedActivities.find(activity => activity.id === score.attributes.activity_id)){\n          rankedActivities.find(activity => activity.id === score.attributes.activity_id).score += score.attributes.score\n        }else {\n          rankedActivities.push({id: score.attributes.activity_id, score: score.attributes.score})\n        }\n      }\n    })\n    return rankedActivities.sort((a, b) => (a.score > b.score) ? -1 : 1)\n}\n\ndeleteActivity = (activityId) => {\n  this.props.deleteActivityFetch(activityId)\n}\n\n  render() {\n    if (!sessionStorage.getItem('token')) {\n      return <Redirect push to=\"/login\"/>\n  }\n      return (\n        <>\n        <LetterAdder/>\n        <button onClick={() => this.props.logout()} style={{maxHeight: \"30px\"}}>Log Out</button>\n          <div className='rowC' id='value_container' style={{\n                backgroundColor: 'white',\n                borderWidth: '5px',\n                borderColor:'#aaaaaa', \n                borderStyle:'solid',\n                alignItems: 'center',\n                justifyContent: 'center',\n                position: 'absolute', left: '70%', top: '12%',\n                transform: 'translate(-50%, -50%)'\n              }}>\n            \n            <NewActivityForm />\n            <br/>\n            <RankedActivitiesList activities={this.props.activities} rankedActivities={this.calculatedScores()}/>\n            <br/>\n            <AllActivitiesList deleteActivityFetch={this.deleteActivity} activities={this.props.activities}/>\n          </div>\n          <br></br>\n<div className='rowC' id='value_container' style={{\n  backgroundColor: 'white',\n  borderWidth: '5px',\n  borderColor:'#aaaaaa', \n  borderStyle:'solid',\n  position: 'absolute', left: '0%'\n}}>\n  <NewValueForm/>\n  <br/><br/>\n  <ValuesList addOrRemoveFromUsersValues={this.addOrRemoveFromUsersValues} updateUserValues={this.updateUserValues} usersValues={this.state.associatedValues} deleteValue={this.deleteValue} values={this.props.values}/>\n</div>\n</>\n      );\n  }\n}\n\nfunction mapStateToProps(currentState){\n  return {\n    values: currentState.values.values,\n    activities: currentState.activities.activities,\n    scores: currentState.scores.scores,\n    current_user: currentState.user\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n      fetchActivities: (token) => dispatch(fetchActivities(token)),\n      logout: () => dispatch(logout()),\n      deleteValueFetch: (valueId, token) => dispatch (deleteValueFetch(valueId, token)),\n      putUserInStoreAfterPageRefresh: (token, username, value_ids) => dispatch(putUserInStoreAfterPageRefresh(token, username, value_ids)),\n      updateUsersValues: (values, userId, token) => dispatch(updateUsersValues(values, userId, token)),\n      deleteActivityFetch: (activityId) => dispatch(deleteActivityFetch(activityId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivitiesValuesContainer);\n"]},"metadata":{},"sourceType":"module"}